syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.example.grpc";
option java_outer_classname = "HelloWorldProto";
option objc_class_prefix = "HLW";

package helloworld;

// The greeting service definition.
service HelloWorld {
  rpc GetLeader(GetLeaderRequest) returns (GetLeaderReply){}
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {}

  rpc StartRaftNode(RaftNodeRequest) returns (RaftNodeReply){}
  rpc StopRaftNode(RaftNodeRequest) returns (RaftNodeReply){}
  rpc AddPeer(PeerRequest) returns (PeerReply){}
  rpc RemovePeer(PeerRequest) returns (PeerReply){}
  rpc ChangePeers(PeerRequest) returns (PeerReply){}
  rpc TransferLeader(PeerRequest) returns (PeerReply){}

  // 设置批量入库模式
  rpc SetMode(SetModeRequest) returns (SetModeReply){}

  rpc Scan(stream ScanRequest) returns (stream ScanResponse){}

}

// The request message containing the user's name.
message HelloRequest {
  string groupId = 1;
  bytes key = 2;
  bytes value = 3;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}

message GetLeaderRequest{
  string groupId = 1;
}

message GetLeaderReply{
  string groupId = 1;
  string leader = 2;
}

message BatchRequest{
  repeated string message = 1;
}

message BatchReply{

}

message RaftNodeRequest{
  string groupId = 1;
  string peers = 3;
}

message RaftNodeReply{

}

message PeerRequest{
  string groupId = 1;
  string address = 2;
  string learner = 3;
}

message PeerReply{

}



message SetModeRequest{
  string groupId = 1;
  int32 mode = 2;
}

message SetModeReply{

}

enum WorkMode {
  NORMAL = 0;
  BATCH_LOADING = 1;
};

message ScanRequest{
  string id = 1;
}

message ScanResponse{
  string id = 1;
  bytes data = 2;
  bytes buf = 3;
}

message Kv {
  bytes key = 1;
  bytes value = 2;
  int32 code = 9;
}